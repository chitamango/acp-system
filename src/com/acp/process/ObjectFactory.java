//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0-b52-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.10.07 at 10:53:07 PM EST 
//


package com.acp.process;

import javax.xml.bind.annotation.XmlRegistry;
import com.acp.process.AndType.Atom;
import com.acp.process.AttributesType.Attribute;
import com.acp.process.StatesType.State;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.acp.process package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.acp.process
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ArtifactsType }
     * 
     */
    public ArtifactsType createArtifactsType() {
        return new ArtifactsType();
    }

    /**
     * Create an instance of {@link State }
     * 
     */
    public State createStatesTypeState() {
        return new State();
    }

    /**
     * Create an instance of {@link AttributesType }
     * 
     */
    public AttributesType createAttributesType() {
        return new AttributesType();
    }

    /**
     * Create an instance of {@link Attribute }
     * 
     */
    public Attribute createAttributesTypeAttribute() {
        return new Attribute();
    }

    /**
     * Create an instance of {@link TransitionType }
     * 
     */
    public TransitionType createTransitionType() {
        return new TransitionType();
    }

    /**
     * Create an instance of {@link Process }
     * 
     */
    public Process createProcess() {
        return new Process();
    }

    /**
     * Create an instance of {@link ServiceType }
     * 
     */
    public ServiceType createServiceType() {
        return new ServiceType();
    }

    /**
     * Create an instance of {@link DoType }
     * 
     */
    public DoType createDoType() {
        return new DoType();
    }

    /**
     * Create an instance of {@link ToType }
     * 
     */
    public ToType createToType() {
        return new ToType();
    }

    /**
     * Create an instance of {@link FromType }
     * 
     */
    public FromType createFromType() {
        return new FromType();
    }

    /**
     * Create an instance of {@link Maptype }
     * 
     */
    public Maptype createMaptype() {
        return new Maptype();
    }

    /**
     * Create an instance of {@link CopyType }
     * 
     */
    public CopyType createCopyType() {
        return new CopyType();
    }

    /**
     * Create an instance of {@link TransitionsType }
     * 
     */
    public TransitionsType createTransitionsType() {
        return new TransitionsType();
    }

    /**
     * Create an instance of {@link OnEventType }
     * 
     */
    public OnEventType createOnEventType() {
        return new OnEventType();
    }

    /**
     * Create an instance of {@link ServicesType }
     * 
     */
    public ServicesType createServicesType() {
        return new ServicesType();
    }

    /**
     * Create an instance of {@link PostconType }
     * 
     */
    public PostconType createPostconType() {
        return new PostconType();
    }

    /**
     * Create an instance of {@link InvokeType }
     * 
     */
    public InvokeType createInvokeType() {
        return new InvokeType();
    }

    /**
     * Create an instance of {@link Atom }
     * 
     */
    public Atom createAndTypeAtom() {
        return new Atom();
    }

    /**
     * Create an instance of {@link StatesType }
     * 
     */
    public StatesType createStatesType() {
        return new StatesType();
    }

    /**
     * Create an instance of {@link RuleType }
     * 
     */
    public RuleType createRuleType() {
        return new RuleType();
    }

    /**
     * Create an instance of {@link AndType }
     * 
     */
    public AndType createAndType() {
        return new AndType();
    }

    /**
     * Create an instance of {@link BusinessRulesType }
     * 
     */
    public BusinessRulesType createBusinessRulesType() {
        return new BusinessRulesType();
    }

    /**
     * Create an instance of {@link PreconType }
     * 
     */
    public PreconType createPreconType() {
        return new PreconType();
    }

    /**
     * Create an instance of {@link MappingType }
     * 
     */
    public MappingType createMappingType() {
        return new MappingType();
    }

    /**
     * Create an instance of {@link ArtifactType }
     * 
     */
    public ArtifactType createArtifactType() {
        return new ArtifactType();
    }

}
